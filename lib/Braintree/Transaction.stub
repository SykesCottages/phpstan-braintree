<?php

namespace Braintree;

/**
 * @property-read \Braintree\AddOn[] $addOns
 * @property-read string $additionalProcessorResponse raw response from processor
 * @property-read string $amount transaction amount
 * @property-read \Braintree\Transaction\GooglePayCardDetails $googlePayCardDetails transaction Google Pay card info
 * @property-read \Braintree\Transaction\ApplePayCardDetails $applePayCardDetails transaction Apple Pay card info
 * @property-read \Braintree\AuthorizationAdjustment[] $authorizationAdjustments populated when a transaction has authorization adjustments created when submitted for settlement
 * @property-read \DateTime $authorizationExpiresAt DateTime authorization will expire
 * @property-read string $avsErrorResponseCode
 * @property-read string $avsPostalCodeResponseCode
 * @property-read string $avsStreetAddressResponseCode
 * @property-read \Braintree\Transaction\AddressDetails $billingDetails transaction billing address
 * @property-read string $channel
 * @property-read \DateTime $createdAt transaction created DateTime
 * @property-read \Braintree\Transaction\CreditCardDetails $creditCardDetails transaction credit card info
 * @property-read string $currencyIsoCode
 * @property-read array $customFields custom fields passed with the request
 * @property-read \Braintree\Transaction\CustomerDetails $customerDetails transaction customer info
 * @property-read string $cvvResponseCode
 * @property-read \Braintree\Descriptor $descriptor
 * @property-read Braintree\DisbursementDetails $disbursementDetails populated when transaction is disbursed
 * @property-read string $discountAmount
 * @property-read \Braintree\Discount[] $discounts
 * @property-read \Braintree\Dispute[] $disputes populated when transaction is disputed
 * @property-read string $escrowStatus
 * @property-read \Braintree\FacilitatedDetails $facilitatedDetails
 * @property-read \Braintree\FacilitatorDetails $facilitatorDetails
 * @property-read string $gatewayRejectionReason
 * @property-read string $graphQLId transaction graphQLId
 * @property-read string $id transaction id
 * @property-read \Braintree\TransactionLineItem[] $lineItems
 * @property-read string $merchantAccountId
 * @property-read string $networkTransactionId
 * @property-read string $orderId
 * @property-read string $acquirerReferenceNumber
 * @property-read string $paymentInstrumentType
 * @property-read \Braintree\Transaction\PayPalDetails $paypalDetails transaction paypal account info
 * @property-read \Braintree\Transaction\PayPalHereDetails $paypalHereDetails
 * @property-read \Braintree\Transaction\LocalPaymentDetails $localPaymentDetails transaction local payment info
 * @property-read string $planId
 * @property-read string $processedWithNetworkToken
 * @property-read string $processorAuthorizationCode
 * @property-read string $processorResponseCode gateway response code
 * @property-read string $processorResponseText
 * @property-read string $processorResponseType
 * @property-read string $processorSettlementResponseCode
 * @property-read string $processorSettlementResponseText
 * @property-read string $productSku
 * @property-read string $purchaseOrderNumber
 * @property-read mixed $reccuring
 * @property-read mixed $refundIds
 * @property-read string $refundedTransactionId
 * @property-read string $retrievalReferenceNumber
 * @property-read \Braintree\RiskData $riskData
 * @property-read \Braintree\Transaction\SamsungPayCardDetails $samsungPayCardDetails transaction Samsung Pay card info
 * @property-read string $scaExemptionRequested
 * @property-read string $serviceFeeAmount
 * @property-read string $settlementBatchId
 * @property-read string $shippingAmount
 * @property-read \Braintree\Transaction\AddressDetails $shippingDetails transaction shipping address
 * @property-read string $status transaction status
 * @property-read \Braintree\Transaction\StatusDetails[] $statusHistory array of StatusDetails objects
 * @property-read \Braintree\Transaction\SubscriptionDetails $subscriptionDetails
 * @property-read string $subscriptionId
 * @property-read string $taxAmount
 * @property-read string $taxExcempt
 * @property-read \Braintree\ThreeDSecureInfo $threeDSecureInfo
 * @property-read string $type transaction type
 * @property-read \DateTime $updatedAt transaction updated DateTime
 * @property-read \Braintree\VenmoAccount $venmoAccountDetails transaction Venmo Account info
 * @property-read \Braintree\Transaction\VisaCheckoutCardDetails $visaCheckoutCardDetails transaction Visa Checkout card info
 * @property-read string $voiceReferralName
 *
 */
// phpcs:enable Generic.Files.LineLength

class Transaction extends Base
{
    /**
     * @param array $transactionAttribs array of transaction data
     * @return void
     */
    protected function _initialize($transactionAttribs)
    {
    }

    /**
     * @return string
     */
    public function __toString()
    {
    }

    public function isEqual($otherTx)
    {
    }

    public function vaultCreditCard()
    {
    }

    /**
     * @return null|\Braintree\Customer 
     */
    public function vaultCustomer()
    {
    }

    /**
     * @return boolean 
     */
    public function isDisbursed()
    {
    }

    /**
     * @return TransactionLineItem items 
     */
    public function lineItems()
    {
    }

    /**
     * @return Transaction
     */
    public static function factory($attributes)
    {
    }

    /**
     * @param string $transactionId
     * @param string $amount
     */
    public static function adjustAuthorization($transactionId, $amount)
    {
    }

    public static function cloneTransaction($transactionId, $attribs)
    {
    }

    public static function createTransactionUrl()
    {
    }

    public static function credit($attribs)
    {
    }

    public static function creditNoValidate($attribs)
    {
    }

    public static function find($id)
    {
    }

    public static function sale($attribs)
    {
    }

    public static function saleNoValidate($attribs)
    {
    }

    public static function search($query)
    {
    }

    public static function fetch($query, $ids)
    {
    }

    public static function void($transactionId)
    {
    }

    public static function voidNoValidate($transactionId)
    {
    }

    public static function submitForSettlement($transactionId, $amount = null, $attribs = [])
    {
    }

    public static function submitForSettlementNoValidate($transactionId, $amount = null, $attribs = [])
    {
    }

    public static function updateDetails($transactionId, $attribs = [])
    {
    }

    public static function submitForPartialSettlement($transactionId, $amount, $attribs = [])
    {
    }

    public static function holdInEscrow($transactionId)
    {
    }

    public static function releaseFromEscrow($transactionId)
    {
    }

    public static function cancelRelease($transactionId)
    {
    }

    public static function refund($transactionId, $amount = null)
    {
    }
}
